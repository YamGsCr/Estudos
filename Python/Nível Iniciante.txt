Dia 1 e 2 - String e Tipos de Data:

-String-

 Basicamente, as strings são dados, cada caractere se assemelha com um dado. As aspas "cortam" e limitam esses dados, dando o output desejado.
Pense que os underlines são "pedaços": ___hello world___, como queremos apenas demonstrar o "hello world", iremos limitar essa string com as aspas:
___"hello world"___, assim, os outros trechos são inibidos do output.
 Seguindo isso, juntar duas strings com um espaço entre elas tem a mesma teoria. Como estamos trabalhando com trechos, é necessário aplicar um
"dado vazio" entre elas para simular o espaço:
 "print("hello" + "world")" - vai resultar em "helloworld"
 "print("hello" + " " + "world")" - vai resultar em "hello world"
 Claro que podemos colocar um espaço antes do "world" ou no final do "hello", resultando no "hello world". No fim, ainda trabalhamos com "trechos
de dados" da string.

-Tipos de dados e f-strings-

 Os tipos de dados que trabalhamos são: int, float, boolean (e a string). Resumindo cada um:
- Int: São números inteiros, como o 1, 15, 10.
- Float: São números com ponto flutuante, sendo um exemplo deles: 3,3335.
- Boolean: É o True e o False.
 Trabalhar com diferentes tipos de dados exige cuidado e atenção, por exemplo, não podemos concatenar um int com uma string. Para concatenar, ambas
precisamos transformar uma delas no outro tipo de dado.
 "print("5" + 5) - Vai dar erro
 "print(int("5")+5) - Vai resultar no 10
 
 As f-string, ou strings formatadas é uma forma de printar. Um exemplo grosseiro disso, "gostaria de colocar uma equação em um print, porém, não vejo necessidade
de criar uma variavel para isso".
 "print(f"O resultado: {5/2:.2f}") - Podemos usar a f-string para isso, o .2f é uma forma de arredondamento/limitação dos números após a vírgula.

Dia 3 - If e Else:

 São formas de colocar uma condição no código. "Se ele for maior de 18, pagar uma taxa. Se não, é isento". Existe também os Nested If, que são If, dentro de If.
São bons metódos para adicionar caminhos dentro de uma condição:

idade = 18
if idade >= 18:
	if tamanho > 150:
		print("Pode seguir")
	if tamanho < 150:
		print("Não pode seguir")
else:
	print("Menores de 18 não podem seguir")
 
 É um exemplo bem bobo, porém, ele demonstra de forma simples o If e Else entrando em ação. Existe o elif também, que seria um "segundo if".

Dia 4 - Lists:

	Listas são estruturas de dados que contem int, string, etc. São criadas por meio de []

Dia 5 - Loops:
	É chamado por meio do "For", os loops funcionam de diferentes formas, porém, tem o mesmo intuito
que é rodar em algo (seja lista, dataset, números, entre outros) e acionar algo.
	A estrutura do for segue dessa forma:
	
	for (nome) in (list, range, etc):
		seu código
	
	No for range, você coloca um start e um stop, ou seja, um início e um fim. Você também pode adicionar um "step",
que seria a quantidade de passos a cada "ativação".
	Exemplo: Temos um "for algarismos in range(1,10,2)", ele vai dar print dos algarismos.
	Por conta do step ser 2, vai ser printado o 2,4,6,8.

Dia 6 e 7 - Funções:
	Você pode criar uma função no python usando o "def", a qual, pode requisitar parâmetros ou não. Um exemplo:
	def divisorPar(n):
		divisores = []
		for i in range(1,n+1):
			if n%i == 0:
				if i%2 == 0:
					divisores.append(i)
		return divisores
	A função divisorPar irá receber um N(número) qualquer como parâmetro e retornar uma lista com seus divisores pares.


 